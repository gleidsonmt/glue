plugins {
  id 'java'
  id 'application'
  id 'org.javamodularity.moduleplugin' version '1.8.12'
  id 'org.openjfx.javafxplugin' version '0.0.13'
  id 'org.beryx.jlink' version '2.25.0'
}

group 'io.github.gleidsonmt'
version '1.0'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.10.0'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

application {
  mainModule = 'io.github.gleidsonmt.core'
  mainClass = 'io.github.gleidsonmt.core.App'
}

javafx {
  version = '17.0.6'
  modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.web']
}

dependencies {
  implementation 'org.jetbrains:annotations:24.0.1'
  implementation 'fr.brouillard.oss:cssfx:11.5.1' // Special lib to vizualize css when app is running.. so amazing!
  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
  implementation files("vendor/scenicView.jar")

}

test {
useJUnitPlatform()}

jlink {

  forceMerge(
          "javafx.graphics"
  )

  imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  launcher {
    name = 'app'
  }

  jpackage {
    addExtraDependencies("javafx")
  }

}

jlinkZip {
  group = 'distribution'
}